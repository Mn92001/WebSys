<?php
session_start();

ini_set('display_errors', 1);
error_reporting(E_ALL);

include '../../inc/db.php'; 

if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['action'])) {
    $action = $_POST['action'];
    $userID = $_SESSION['user_id'];
    $dateOfApproval = date("Y-m-d H:i:s"); 
    $adminID = getAdminID($conn, $userID);
    $ids = $_POST['pentesterIDs'] ?? [];

    if (!empty($ids)) {

        $ids = array_map('intval', $ids);
        $idsString = implode(',', array_fill(0, count($ids), '?'));
        
        switch ($action) {
            case 'ApproveSelected':
                $query = "UPDATE ApprovalOfPentester SET AdminID = ?, DateOfApproval = ?, ApprovalStatus = 'Approved' WHERE PentesterID IN ($idsString)";    
                break;
            case 'RejectSelected':
                $query = "UPDATE ApprovalOfPentester SET AdminID = ?, DateOfApproval = ?, ApprovalStatus = 'Rejected' WHERE PentesterID IN ($idsString)";     
                break;
            case 'SuspendSelected':
                $query = "UPDATE ApprovalOfPentester SET AdminID = ?, DateOfApproval = ?, ApprovalStatus = 'Suspended' WHERE PentesterID IN ($idsString)";
                break;
        }

        // Prepare the statement
        if ($stmt = $conn->prepare($query)) {

            $types = 'is' . str_repeat('i', count($ids));

            $params = array_merge([$adminID, $dateOfApproval], $ids);

            $stmt->bind_param($types, ...$params);

            if ($stmt->execute()) {
               $_SESSION['success'] = "Pentesters updated successfully.";
            } else {

                $_SESSION['error'] = "Error updating records: " . $stmt->error;
            }
            
            $stmt->close();
        } else {
            $_SESSION['error'] = "Error preparing statement: " . $conn->error;
        }
    } else {
        $_SESSION['error'] = "No pentesters selected.";
    }

    header("Location: ../../pages/list_of_pentesters.php");
    exit();


    // Close connection
    $conn->close();

}

// function to get admin ID
function getAdminID($conn, $userID){
    $queryAdmin = "SELECT AdminID FROM Admin WHERE UserID = ?";
    $adminID = 0;

    // Statement for queryAdmin to get the AdminID
    if ($stmt = $conn->prepare($queryAdmin)) {
        $stmt->bind_param("i", $userID);
        $stmt->execute();

        $result = $stmt->get_result();
        if ($result->num_rows > 0) {
            $row = $result->fetch_assoc();
            $adminID = $row['AdminID']; 
        } 

        $stmt->close();
    } 

    return $adminID;
}
?>
